{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","status","setStatus","onSubmit","e","preventDefault","completed","text","id","Math","random","value","onChange","target","type","className","name","Todo","todo","onClick","map","item","filter","el","TodoList","filteredTodos","index","App","useState","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c5ec046.chunk.js","sourcesContent":["import React from 'react';\n\nconst Form = ({inputText, setInputText, todos, setTodos, status, setStatus}) => {\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  }\n\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTodos([...todos, {completed: false, text: inputText, id: Math.random() * 1000}]);\n    setInputText('');\n  }\n\n  const filterHandler = (e) => {\n    setStatus(e.target.value);\n  }\n\n  return (\n    <form onSubmit={submitTodoHandler}>\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\n      <button className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\" value={status} onChange={filterHandler}>\n        <select name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","import React from 'react';\n\nconst Todo = ({todo, todos, setTodos}) => {\n  const deleteHandler = () => {\n    setTodos(todos.filter(el => el.id !== todo.id))\n  }\n\n  const completeHandler = () => {\n    setTodos(todos.map(item => {\n      if(item.id === todo.id) {\n        return {\n          ...item, completed: !item.completed\n        };\n      }\n      return item;\n    }));\n  }\n\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? \"completed\": \"\" }`}>{ todo.text }</li>\n      <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\n      <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\n    </div>\n  );\n}\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './Todo';\n\nconst TodoList = ({todos, setTodos, filteredTodos}) => {\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        { filteredTodos.map( (todo, index) => (\n          <Todo todo={todo} todos={todos} setTodos={setTodos} key={index}/>\n        )) }\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\n\nfunction App() {\n  const [ inputText, setInputText ] = useState('');\n  const [ todos, setTodos] = useState([]);\n  const [ status, setStatus ] = useState('all');\n  const [ filteredTodos, setFilteredTodos ] = useState([]);\n\n  //run once\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch(status) {\n      case 'completed':\n        setFilteredTodos(todos.filter( item => item.completed === true ));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter( item => item.completed === false ));\n        break;\n      default:\n        setFilteredTodos(todos);\n    }\n  };\n\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n\n  const getLocalTodos = () => {\n    if(localStorage.getItem('todos') === null) {\n      setTodos([]);\n    } else {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Doug's Todo List</h1>\n      </header>\n      <Form todos={todos} setTodos={setTodos} inputText={inputText} setInputText={setInputText} status={status} setStatus={setStatus} />\n      <TodoList inputText={inputText} todos={todos} filteredTodos={filteredTodos} setTodos={setTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}